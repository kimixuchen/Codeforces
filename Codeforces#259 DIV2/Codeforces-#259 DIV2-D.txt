/**
 * Codeforces-#259 DIV2-D
 * 2015-11-22 14:02:03
 * xuchen
**/
/**
**/
#include <iostream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <string.h>
#include <algorithm>
#include <stdlib.h>
using namespace std;

const int N = 105;
const int M = 60;
const int INF = 0x3f3f3f3f;
const int mx = 1<<17;
const int prims[16] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53};

int a[N];
int k[M];
int f[N][mx];
int pre[N][mx][2];

void print(int n, int i)
{
	if(n<1)
		return;
	print(n-1, pre[n][i][0]);
	printf("%d ", pre[n][i][1]);
}
int main()
{
	int n;
	scanf("%d", &n);
	for(int i=1; i<=n; i++)
		scanf("%d", &a[i]);
	for(int i=1; i<M; i++)
	{
		int t=0;
		for(int j=0; j<16; j++)
			if(!(i%prims[j]))
				t |= 1<<(16-j);
		k[i] = t;
	}
	
	memset(f, INF, sizeof(f));
	memset(f[0], 0, sizeof(f[0]));
	for(int i=1; i<=n; i++)
	{
		for(int j=0; j<mx; j++)	
		{
			for(int x=1; x<M; x++)
			{
				if((k[x]&j) == k[x])
				{
					if((f[i-1][j^k[x]] + abs(a[i]-x)) < f[i][j])
					{
						f[i][j] = f[i-1][j^k[x]] + abs(a[i]-x); 
						pre[i][j][0] = j^k[x];
						pre[i][j][1] = x;
					}
				}
			}
					
		}
	}
	int min = INF, pos;
	for(int i=0; i<mx; i++)
	{
		if(f[n][i] < min)
		{
			min = f[n][i];
			pos = i;
		}
	}
	print(n, pos);
	return 0;
}
